{"version":3,"sources":["components/NavBar.js","components/ProductsItem.js","components/Products.js","components/actions/cartActions.js","components/actions/actionTypes/cart-action.js","components/CheckOut.js","components/Cart.js","App.js","serviceWorker.js","components/reducers/cartReducers.js","index.js"],"names":["NavBar","className","to","ProductsItem","bike","handleAddItem","src","image","alt","name","price","onClick","id","product_type","connect","state","bikes","dispatch","addToCart","type","props","bikeList","products","map","key","items","addedItems","total","toFixed","alert","quantity","addQuantity","subtractQuantity","length","item","App","basename","exact","path","render","Fragment","Boolean","window","location","hostname","match","initState","cartReducer","action","addedItem","find","existed_item","newTotal","addedQuan","subQuan","new_items","filter","store","createStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.41e9e714.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nconst NavBar = () => {\n  return (\n    <nav className=\"navbar is-primary\">\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <div className=\"navbar-item\">\n            <Link to=\"/\">\n              <h1 className=\"title is-5 has-text-white \">Bike Rentals</h1>\n            </Link>\n          </div>\n        </div>\n        <div className=\"navbar-end\">\n          <div className=\"navbar-item\">\n            <h1 className=\"has-text-weight-bold\">Checkout</h1>\n            <button className=\"button is-primary is-medium \">\n              <Link to=\"/checkout\">\n                <i className=\"fas fa-shopping-cart has-text-white\"></i>\n              </Link>\n            </button>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React from 'react';\n\nconst ProductsItem = ({ bike, handleAddItem }) => {\n  return (\n    <div className=\"column is-4\">\n      <div className=\"box\">\n        <div className=\"card\">\n          <div className=\"card-image\">\n            <figure className=\"image is-5by4\">\n              <img src={bike.image} alt=\"bike\" />\n            </figure>\n          </div>\n\n          <div className=\"card-content\">\n            <div className=\"media\">\n              <div className=\"media-content\">\n                <p className=\"title  is-size-4 has-text-centered\">\n                  {bike.name}\n                </p>\n                <p className=\"subtitle  is-size-4 has-text-centered\">{`$${bike.price}`}</p>\n                <button\n                  className=\"button is-primary is-small is-pulled-right \"\n                  onClick={() => handleAddItem(bike.id)}\n                >\n                  <p>Add to Cart</p>\n                </button>\n                <p className=\"title is-size-4 is-capitalized\">\n                  {bike.product_type}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductsItem;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addToCart } from './actions/cartActions';\nimport ProductsItem from './ProductsItem';\n\nconst Products = props => {\n  const handleAddItem = id => {\n    props.addToCart(id);\n  };\n\n  const bikeList = props.bikes.products.map(bike => (\n    <ProductsItem key={bike.id} bike={bike} handleAddItem={handleAddItem} />\n  ));\n\n  return (\n    <div>\n      <h1 className=\"title is-1 has-text-centered\">Our Items</h1>\n      <div className=\"columns is-multiline\">{bikeList}</div>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    bikes: state.bikes,\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    addToCart: id => {\n      dispatch(addToCart(id));\n    },\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Products);\n","import {\n  ADD_TO_CART,\n  ADD_QUANTITY,\n  SUB_QUANTITY,\n} from './actionTypes/cart-action';\n\nexport const addToCart = id => {\n  return {\n    type: ADD_TO_CART,\n    id,\n  };\n};\n\nexport const subtractQuantity = id => {\n  return {\n    type: SUB_QUANTITY,\n    id,\n  };\n};\n\nexport const addQuantity = id => {\n  return {\n    type: ADD_QUANTITY,\n    id,\n  };\n};\n","export const ADD_TO_CART = 'ADD_TO_CART';\nexport const ADD_QUANTITY = 'ADD_QUANTITY';\nexport const SUB_QUANTITY = 'SUB_QUANTITY';\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst CheckOut = props => {\n  return (\n    <div>\n      <p className=\"title  is-size-5 \">Total: ${props.total.toFixed(2)}</p>\n      <br />\n      <button\n        className=\"button is-primary is-medium\"\n        onClick={() => alert('Thanks for your order')}\n      >\n        Checkout\n      </button>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    items: state.addedItems,\n    total: state.total,\n  };\n};\n\nexport default connect(mapStateToProps)(CheckOut);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addQuantity, subtractQuantity } from './actions/cartActions';\nimport CheckOut from './CheckOut';\n\nconst Cart = props => {\n  const handleAddQuantity = id => {\n    props.addQuantity(id);\n  };\n\n  const handleSubtractQuantity = id => {\n    props.subtractQuantity(id);\n  };\n\n  let addedItems = props.items.length ? (\n    props.items.map(item => {\n      return (\n        <li className=\"column is-4\" key={item.id}>\n          <div className=\"card\">\n            <div className=\"card-content\">\n              <div className=\"media\">\n                <div className=\"media-left\">\n                  <figure className=\"image is-128x128\">\n                    <img className=\"is-rounded\" src={item.image} alt=\"bike\" />\n                  </figure>\n                  <br />\n                  <p className=\"title is-size-4 is-capitalized has-text-centered\">\n                    {item.product_type}\n                  </p>\n                </div>\n                <div className=\"card-content is-pulled-right\">\n                  <p className=\"title  is-size-5 \">{item.name}</p>\n                  <p className=\"subtitle  is-size-4\">{`$${item.price}`}</p>\n                  <p>Quantity: {item.quantity}</p>\n                  <br />\n                  <div>\n                    <button\n                      className=\"button  is-outlined\"\n                      onClick={() => handleAddQuantity(item.id)}\n                    >\n                      <i className=\"fas fa-sort-up\"></i>\n                    </button>\n                    <button\n                      className=\"button  is-outlined\"\n                      onClick={() => handleSubtractQuantity(item.id)}\n                    >\n                      <i className=\"fas fa-sort-down\"></i>\n                    </button>\n                  </div>\n\n                  <br />\n                </div>\n              </div>\n            </div>\n          </div>\n        </li>\n      );\n    })\n  ) : (\n    <div className=\"card\">\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <p className=\"title  is-size-5\">Nothing.</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n  return (\n    <div>\n      <h1 className=\"title is-1 has-text-centered\">You have ordered</h1>\n      <div className=\"columns is-multiline\">{addedItems}</div>\n      <br />\n      <CheckOut />\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    items: state.addedItems,\n    total: state.total,\n    quantity: state.quantity,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addQuantity: id => {\n      dispatch(addQuantity(id));\n    },\n    subtractQuantity: id => {\n      dispatch(subtractQuantity(id));\n    },\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Cart);\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport NavBar from './components/NavBar';\nimport Product from './components/Products';\nimport Cart from './components/Cart';\n\nconst App = () => {\n  return (\n    <HashRouter basename=\"/\">\n      <div>\n        <NavBar />\n        <div className=\"container\">\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={() => (\n                <React.Fragment>\n                  <Product />\n                </React.Fragment>\n              )}\n            />\n            <Route path=\"/checkout\" render={() => <Cart />} />\n          </Switch>\n        </div>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  ADD_TO_CART,\n  ADD_QUANTITY,\n  SUB_QUANTITY,\n} from '../actions/actionTypes/cart-action';\nimport bikes from '../../bikerentals.json';\n\nconst initState = {\n  bikes: bikes,\n  addedItems: [],\n  total: 0,\n};\n\nconst cartReducer = (state = initState, action) => {\n  switch (action.type) {\n    case ADD_TO_CART:\n      let addedItem = state.bikes.products.find(bike => bike.id === action.id);\n      let existed_item = state.addedItems.find(bike => action.id === bike.id);\n      if (existed_item) {\n        addedItem.quantity += 1;\n        return {\n          ...state,\n          total: state.total + addedItem.price,\n        };\n      } else {\n        addedItem.quantity = 1;\n        let newTotal = state.total + addedItem.price;\n\n        return {\n          ...state,\n          addedItems: [...state.addedItems, addedItem],\n          total: newTotal,\n        };\n      }\n\n    case ADD_QUANTITY:\n      let addedQuan = state.bikes.products.find(item => item.id === action.id);\n      addedQuan.quantity += 1;\n      let newTotal = state.total + addedQuan.price;\n      return {\n        ...state,\n        total: newTotal,\n      };\n\n    case SUB_QUANTITY:\n      let subQuan = state.bikes.products.find(item => item.id === action.id);\n\n      if (subQuan.quantity === 1) {\n        let new_items = state.addedItems.filter(item => item.id !== action.id);\n        let newTotal = state.total - subQuan.price;\n        return {\n          ...state,\n          addedItems: new_items,\n          total: newTotal,\n        };\n      } else {\n        subQuan.quantity -= 1;\n        let newTotal = state.total - subQuan.price;\n        return {\n          ...state,\n          total: newTotal,\n        };\n      }\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport * as serviceWorker from './serviceWorker';\nimport cartReducer from './components/reducers/cartReducers';\nimport 'bulma/css/bulma.css';\n\nconst store = createStore(cartReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}